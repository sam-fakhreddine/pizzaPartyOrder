services:
  evansdale_pizza:
    container_name: evansdale_pizza_app
    build:
      context: ./app 
    ports:
      - "5000:5000"
    volumes:
      - ./app/orders:/app/orders  # Updated path if needed
    environment:
      - FLASK_ENV=${FLASK_ENV:-production}  # Default to production if FLASK_ENV is not set in .env file
    restart: unless-stopped  # Restart unless manually stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"      # Maximum size per log file
        max-file: "3"        # Number of rotated log files to keep
    deploy:
      resources:
        limits:
          cpus: "0.5"          # Limit CPU to half a core
          memory: "512M"       # Limit memory to 512 MB
    networks:
      - evansdale_net  # Shared internal network with MongoDB

  mongodb:
    image: mongo:latest
    container_name: mongodb
    volumes:
      - mongo_data:/data/db  # Persistent volume for MongoDB data
    environment:
      - MONGO_INITDB_DATABASE=evansdale_pizza  # Optional: Initialize with a default database
    networks:
      - evansdale_net  # Only accessible within this internal network

volumes:
  app_data:  # Define named volume for app persistent storage
  mongo_data:  # Define named volume for MongoDB persistent storage

networks:
  evansdale_net:
    driver: bridge  # Custom network for service isolation
